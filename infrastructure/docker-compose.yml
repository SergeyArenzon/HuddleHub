version: '2.27.1'

services:
  # User Service
  user:
    build:
      context: ../services/user
      dockerfile: Dockerfile
    command: npm run dev
    environment:
      ADDRESS: 0.0.0.0 
      PORT: 8085
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: "postgresql://${PG_DEFAULT_DATABASE_USER}:${PG_DEFAULT_DATABASE_PASSWORD}@user-db:${PG_DEFAULT_DATABASE_PORT}/${PG_DEFAULT_DATABASE_DB}?schema=public"
      RABBITMQ_URL: "${RABBITMQ_URL}"
    volumes:
      - ../services/user/src:/app/src
      - ../services/user/prisma:/app/prisma
      - /code/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - huddlehub-network

  user-db:
    image: postgres
    environment:
      POSTGRES_USER: ${PG_DEFAULT_DATABASE_USER}
      POSTGRES_PASSWORD: ${PG_DEFAULT_DATABASE_PASSWORD}
      POSTGRES_DB: ${PG_DEFAULT_DATABASE_DB}
    ports:
      - ${PG_USER_DATABASE_PORT}:5432
    volumes:
      - ../data/user:/var/lib/postgresql/data
    networks:
      - huddlehub-network

    # User Service
  auth:
    build:
      context: ../services/auth
      dockerfile: Dockerfile
    command: npm run dev
    environment:
      ADDRESS: 0.0.0.0 
      NAME: auth
      PORT: 8084
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      RABBITMQ_URL: "${RABBITMQ_URL}"
      DATABASE_URL: "postgresql://${PG_DEFAULT_DATABASE_USER}:${PG_DEFAULT_DATABASE_PASSWORD}@user-db:${PG_DEFAULT_DATABASE_PORT}/${PG_DEFAULT_DATABASE_DB}?schema=public"
    volumes:
      - ../services/auth/src:/app/src
      - ../services/auth/prisma:/app/prisma
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - huddlehub-network

  # Client Service
  client:
    build:
      context: ../client
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      JWT_SECRET: ${JWT_SECRET}
      API_URL: "http://localhost:8080"
      PORT: 3000
    command: npm run dev
    volumes:
      - ../client:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - user
    networks:
      - huddlehub-network

  # Nginx
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ../services/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - huddlehub-network
    depends_on:
      - user
      - auth    
  
  rabbitmq:
    image: rabbitmq:management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - huddlehub-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      ELASTIC_PASSWORD: admin1234
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ../data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - huddlehub-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.2
    ports:
      - "5044:5044"
    environment:
      - ELASTIC_USER=elastic
      - LOGSTASH_START=true
    volumes:
      - ../logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf 
      - ../logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    networks:
      - huddlehub-network
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.2
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2pvYmJlci1raWJhbmE6N3BWZ0ItZWxSY21wMEJ0Y3ZKNTlHZw
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    ports:
      - 5601:5601
    networks:
      - huddlehub-network
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on: 
      - elasticsearch

networks:
  elastic:
    name: elastic
  huddlehub-network:
    driver: bridge

volumes:
  user-data: {}
