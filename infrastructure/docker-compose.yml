version: 2.27.1

services: 
  user-api:
    build:
      context: ../services/user
      dockerfile: Dockerfile
    command: npm run dev
    environment:
      ADDRESS: 0.0.0.0 
      PORT: 8080
      NODE_ENV: development
      DATABASE_URL: "postgresql://${USER_DATABASE_USER}:${USER_DATABASE_PASSWORD}@user-db:${USER_DATABASE_PORT}/${USER_DATABASE_DB}?schema=public"
    volumes:
      - ../services/user/src:/app/src
      - ../services/user/prisma:/app/prisma
      - /code/node_modules
    networks:
      - huddlehub-network
    
  user-db:
    image: postgres
    environment:
      POSTGRES_USER: ${USER_DATABASE_USER}
      POSTGRES_PASSWORD: ${USER_DATABASE_PASSWORD}
      POSTGRES_DB: ${USER_DATABASE_DB}
    ports:
      - ${USER_DATABASE_PORT}:5432
    volumes:
      - ../data/user:/var/lib/postgresql/data
    networks:
      - huddlehub-network
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - huddlehub-network


  client:
    build:
      context: ../client
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      API_URL: "http://localhost:8080"
      PORT: 3000
    command: npm run dev
    volumes:
      - ../client:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - user-api
    networks:
      - huddlehub-network

  # nginx:
  #   build:
  #     context: ../services/nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - huddlehub-network
  #   depends_on:
  #     - auth-api

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ../services/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - huddlehub-network
    depends_on:
      - user-api
      - client

networks:
  huddlehub-network:
    driver: bridge


volumes:
  user-data: {}