apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-pg
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-pg
  template:
    metadata:
      labels:
        app: user-pg
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: user-pg
        image: postgres
        env:
        - name: POSTGRES_USER
          valueFrom: 
            secretKeyRef:
              key: pg-user-user
              name: user-pg-secrets
        - name: POSTGRES_PASSWORD
          valueFrom: 
            secretKeyRef:
              key: pg-user-password
              name: user-pg-secrets
        - name: POSTGRES_DB
          valueFrom: 
            secretKeyRef:
              key: pg-user-db-name
              name: user-pg-secrets
        - name: PGDATA
          valueFrom: 
            secretKeyRef:
              key: pg-user-data
              name: user-pg-secrets
        resources:
          limits:
            memory: "1Gi"
            cpu: "0.5"
          requests:
            memory: "150Mi"
            cpu: "100m"
        ports:
        - name: user-pg
          containerPort: 5432
        volumeMounts:
        - name: user-pg-storage-class
          mountPath: /var/lib/postgresql/data
          subPath: user
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: user-pg-storage-class
        persistentVolumeClaim:
          claimName: user-pg-pvc