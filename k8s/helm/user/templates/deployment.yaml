apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      initContainers:
        - name: wait-for-user-db
          image: busybox
          env:
            - name: USER_DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ index .Values.configMaps "user-db" "name" | quote }}
                  key: POSTGRES_PORT
          command: ["/bin/sh", "-c", "until nc -z -v -w30 user-db $USER_DB_PORT; do echo 'Waiting for PostgreSQL...'; sleep 5; done"]
        - name: migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["npx", "mikro-orm", "migration:up"]
          env:
            - name: PORT
              value: {{ .Values.env.PORT | quote }}
            - name: USER_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ index .Values.configMaps "user-db" "name" | quote }}
                  key: POSTGRES_HOST
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: user
              containerPort: {{ .Values.service.port }}
          env:
            - name: PORT
              value: {{ .Values.env.PORT | quote }}
            - name: USER_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ index .Values.configMaps "user-db" "name" | quote }}
                  key: POSTGRES_HOST
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMaps.rabbitmq.name }}
                  key: RABBITMQ_HOST
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 20 