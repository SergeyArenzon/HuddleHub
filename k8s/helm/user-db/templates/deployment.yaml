apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "user-db.fullname" . }}
  labels:
    {{- include "user-db.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "user-db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user-db.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 60
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ template "user-db.fullname" . }}-config
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        ports:
        - name: postgres
          containerPort: {{ .Values.service.port }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          subPath: pgdata
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.config.POSTGRES_USER }}
          {{- toYaml .Values.probes.readiness | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.config.POSTGRES_USER }}
          {{- toYaml .Values.probes.liveness | nindent 10 }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "user-db.fullname" . }}-pvc 